# Generated by Django 2.2.7 on 2019-11-10 14:24

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('house', models.CharField(max_length=15)),
                ('city', models.CharField(max_length=20)),
                ('state', models.CharField(max_length=20)),
                ('pin', models.BigIntegerField()),
                ('locality', models.CharField(default=' ', max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Attendance',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('lectureId', models.CharField(max_length=50)),
                ('studentId', models.IntegerField()),
                ('status', models.CharField(max_length=15)),
                ('acknowledgement', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Class',
            fields=[
                ('classId', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('className', models.CharField(max_length=100)),
                ('creator', models.CharField(max_length=100)),
                ('maxLectures', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='FCMToken',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FcmToken', models.CharField(max_length=20)),
                ('PersonId', models.IntegerField()),
                ('Person', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Institue',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('address', models.IntegerField()),
                ('name', models.CharField(max_length=50)),
                ('profilePic', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Lecture',
            fields=[
                ('lectureId', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('lectureName', models.CharField(max_length=100)),
                ('remarks', models.CharField(max_length=100)),
                ('schedule', models.DateTimeField()),
                ('teacherName', models.CharField(max_length=100)),
                ('teacherId', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='NotificationsTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('recieverType', models.CharField(max_length=30)),
                ('recieverId', models.IntegerField()),
                ('status', models.CharField(max_length=20)),
                ('body', models.TextField()),
                ('title', models.CharField(max_length=50)),
                ('datetime', models.DateTimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('questionId', models.AutoField(primary_key=True, serialize=False)),
                ('questionText', models.CharField(max_length=500)),
                ('quizId', models.IntegerField()),
                ('options', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), size=None)),
            ],
        ),
        migrations.CreateModel(
            name='Quiz',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('teacherId', models.IntegerField()),
                ('classId', models.CharField(max_length=100)),
                ('totalMarks', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('Id', models.AutoField(primary_key=True, serialize=False)),
                ('quizId', models.CharField(max_length=100)),
                ('studentId', models.CharField(max_length=100)),
                ('marks', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('studentId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('registered', models.BooleanField()),
                ('email', models.EmailField(max_length=100, null=True)),
                ('classId', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=100), default=list, null=True, size=None)),
                ('phone', models.BigIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='StudyMaterial',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Type', models.CharField(max_length=30)),
                ('board', models.CharField(max_length=20)),
                ('source', models.CharField(max_length=30)),
                ('question', models.TextField()),
                ('options', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=20), null=True, size=None)),
                ('answer', models.CharField(max_length=50, null=True)),
                ('subject', models.CharField(max_length=50)),
                ('Class', models.CharField(max_length=50)),
                ('noQuiz', models.IntegerField()),
                ('difficulty', models.CharField(max_length=20)),
                ('chapter', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Teacher',
            fields=[
                ('teacherId', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('phone', models.BigIntegerField(unique=True)),
                ('email', models.CharField(max_length=30)),
                ('institute', models.CharField(max_length=30, null=True)),
                ('address', models.CharField(max_length=100, null=True)),
                ('age', models.IntegerField(null=True)),
                ('experience', models.IntegerField(null=True)),
                ('classId', models.CharField(max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='rateTeacher',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('LectureQuality', models.FloatField(default=5.0)),
                ('DoubtClearance', models.FloatField(default=5.0)),
                ('StudentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Student')),
                ('TeacherId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Teacher')),
            ],
        ),
        migrations.CreateModel(
            name='rateStudent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Attentiveness', models.FloatField(default=5.0)),
                ('attendance', models.FloatField(default=5.0)),
                ('Doubts', models.FloatField(default=5.0)),
                ('StudentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Student')),
                ('TeacherId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blog.Teacher')),
            ],
        ),
    ]
